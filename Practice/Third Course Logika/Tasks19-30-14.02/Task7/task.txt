Задача игра Лабиринт.

Ваша задача сделать игру Лабиринт используя события клавиатуры и ваши накопленные знания создания игр на pygame.

Суть игры: 
Вы появляетесь в назначенной точке, появляется ваш персонаж(квадратик) красного цвета и ваша задача дойти до зелёного квадратика. 
В лабиринте есть стены, обозначенные черными квадратиками, через них пройти нельзя!
Движение происходит на кнопки WASD или стрелки(вправо, влево, вверх, вниз).
Когда вы дошли до квадратика, Points увеличивается на один.

Техническое задание:
У вас уже есть базовая структура html и базовые стили css. Дополнять по желанию.
Создание стенок, изменения координат и весь остальной функционал выполняется в script.js.

Создание:

Стены, персонажа и финиш вы создаете на основе матрицы. P - персонаж, 1 - стена, F - финишная точка.
ВАЖНО!
Матрица должна быть такого вида: ( пример )
[
    ['1','1',','1',','1',','1',','1',','1',','1',','1',','1',],  - первый ряд
    ['1','1',','P',','1',','1',','1',','1',','1',','0',','1',],  - второй ряд
]
Используйте метод, который разделяет строку и создает из неё список с элементами.

Движение:

Перемещение элементов реализуете через свойства top, left.
Данные о вашем персонаже, храните в объекте coordsPlayer. В данном объекте, свойства: X и Y - изначальные координаты, в дальнейшем используя эти свойства, вы должны изменять top и left. 
Движение персонажа, также меняется и на матрице. То есть если вы нажали вверх, тогда по матрице буква P переместилась вверх, а на её месте появился 0.
Коллизию также реализуете через матрицу. ( Проверяете, если справа буква от вас по матрице равна "1", тогда вы не двигаетесь вправо. )
Для проверки на что нажали, используется событие keydown или keyup. У данного события есть свойство code, которое отвечает за какую клавишу нажали.
Вы проверяете, если event.code == 'KeyW' - тогда движение вверх и тд. Список всех code клавиш https://www.w3.org/TR/uievents-code/#key-code-attribute-value.

ВАЖНО!
Событие нажатие на клавиатуру добавляется на объект document !

Победа:
Чтобы получить поинт, нужно наступить на F( финальная точка ).
После прохождения лабиринта, никаких событий не должно быть!
Удаляете событие с помощью метода removeEventListener( "событие", 'функция, которую нужно удалить с элемента.' )

Не забудьте ответить на вопросы в style.css.

Матрицу для ТЕСТОВ, можете менять, НО готовый результат с данной матрицей 
1111111111111111111
1000000000010100001
1111101111010101001
1000001000010100001
1011111011110000001
1010000010110110001
1010111110110100111
1010000000000100001
1P11111111111110101
1010001010001000101
1010001000001000111
1011100000100000001
1000110111111111001
1010010000000001101
1011011111111101111
1010000000000101101
1011111111100100001
10100010001001111F1
1000100010110010001
1111111111111111111
